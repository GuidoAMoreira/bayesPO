// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// runBayesPO
List runBayesPO(NumericVector beta, NumericVector delta, double lambda, String b_updater, String d_updater, String l_updater, List parB, List parD, List parL, String covsClass, SEXP covariates, double areaD, String xClass, SEXP xValues, IntegerVector intensityCovs, IntegerVector observabilityCovs, IntegerVector xIntensityCovs, IntegerVector xObservabilityCovs, int burnin, int thin, int iter);
RcppExport SEXP _bayesPO_runBayesPO(SEXP betaSEXP, SEXP deltaSEXP, SEXP lambdaSEXP, SEXP b_updaterSEXP, SEXP d_updaterSEXP, SEXP l_updaterSEXP, SEXP parBSEXP, SEXP parDSEXP, SEXP parLSEXP, SEXP covsClassSEXP, SEXP covariatesSEXP, SEXP areaDSEXP, SEXP xClassSEXP, SEXP xValuesSEXP, SEXP intensityCovsSEXP, SEXP observabilityCovsSEXP, SEXP xIntensityCovsSEXP, SEXP xObservabilityCovsSEXP, SEXP burninSEXP, SEXP thinSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< String >::type b_updater(b_updaterSEXP);
    Rcpp::traits::input_parameter< String >::type d_updater(d_updaterSEXP);
    Rcpp::traits::input_parameter< String >::type l_updater(l_updaterSEXP);
    Rcpp::traits::input_parameter< List >::type parB(parBSEXP);
    Rcpp::traits::input_parameter< List >::type parD(parDSEXP);
    Rcpp::traits::input_parameter< List >::type parL(parLSEXP);
    Rcpp::traits::input_parameter< String >::type covsClass(covsClassSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< double >::type areaD(areaDSEXP);
    Rcpp::traits::input_parameter< String >::type xClass(xClassSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xValues(xValuesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type intensityCovs(intensityCovsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type observabilityCovs(observabilityCovsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xIntensityCovs(xIntensityCovsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type xObservabilityCovs(xObservabilityCovsSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(runBayesPO(beta, delta, lambda, b_updater, d_updater, l_updater, parB, parD, parL, covsClass, covariates, areaD, xClass, xValues, intensityCovs, observabilityCovs, xIntensityCovs, xObservabilityCovs, burnin, thin, iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bayesPO_runBayesPO", (DL_FUNC) &_bayesPO_runBayesPO, 21},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayesPO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
